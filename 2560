2560. House Robber IV

class Solution {
public:
bool canrob(vector<int>& nums, int k, int cap) {
    int count = 0;
    int n = nums.size();
    for (int i = 0; i < n; i++) {
        if (nums[i] <= cap) { 
            count++;
            i++; 
        }
        if (count >= k) return true;
    }
    return false;
}

int minCapability(vector<int>& nums, int k) {
    int left = *min_element(nums.begin(), nums.end());
    int right = *max_element(nums.begin(), nums.end());
    int result = right;

    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (canrob(nums, k, mid)) {
            result = mid;
            right = mid - 1; 
        } else {
            left = mid + 1;
        }
    }
    return result;
}
 
};
